/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.johan.csg.attendance.register.api;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.johan.csg.attendance.register.api.model.AttendanceRegisterRequest;
import org.johan.csg.attendance.register.api.model.AttendanceRegisterResponse;
import io.swagger.annotations.*;
import org.johan.csg.attendance.register.api.model.StudentAttendanceRequest;
import org.johan.csg.attendance.register.api.service.AttendanceService;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;


@Slf4j
@RestController
@ApiResponses({
        @ApiResponse(code = 400, message = "Bad request"),
        @ApiResponse(code = 500, message = "Internal error")
})
@RequiredArgsConstructor
@CrossOrigin(origins = "http://localhost:8080")
@Api(value = "Attendance")
public class AttendanceApi {

    private final AttendanceService attendanceService;

    /**
     * POST /attendance/record : Record student attendance
     * This can only be done by the logged in user.
     *
     * @param attendanceRegisterRequest (required)
     * @return successful operation (status code 200)
     */
    @ApiOperation(value = "Get attendance register for a classroom and register date", nickname = "attendanceRegister", notes = "This can only be done by the logged in user.", tags = {"attendance-api",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation")})
    @RequestMapping(value = "/attendance/register",
            method = RequestMethod.POST)
    ResponseEntity<AttendanceRegisterResponse> getAttendanceRegister(@ApiParam(value = "", required = true) @RequestBody AttendanceRegisterRequest attendanceRegisterRequest) {

        return new ResponseEntity<>(attendanceService.fetchAttendanceRegister(attendanceRegisterRequest), HttpStatus.OK);

    }


    /**
     * POST /attendance/register : Record student attendance
     * This can only be done by the logged in user.
     *
     * @param request (required)
     * @return successful operation (status code 200)
     * or successful operation (status code 200)
     */
    @ApiOperation(value = "Record student attendance for a classroom", nickname = "recordClassAttendance", notes = "This can only be done by the logged in user.", response = AttendanceRegisterResponse.class, responseContainer = "List", tags = {"attendance-api",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = AttendanceRegisterResponse.class, responseContainer = "List"),
            @ApiResponse(code = 200, message = "successful operation")})
    @RequestMapping(value = "/attendance/record",
            produces = "application/json",
            consumes = "application/json",
            method = RequestMethod.POST)
    ResponseEntity<Void> recordClassAttendance(@ApiParam(value = "", required = true) @RequestBody StudentAttendanceRequest request) {
        attendanceService.recordStudentAttendance(request);
        return new ResponseEntity<>(HttpStatus.OK);
    }

}
